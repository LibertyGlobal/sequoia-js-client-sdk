{
  "name": "payment",
  "urn": "urn:piksel:service:payment",
  "title": "Payment Service",
  "description": "Responsible for providing payment services for content purchase and subscriptions",
  "resourcefuls": {
    "customers": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of customers that may be filtered",
          "actions": [
            "payment:customers:read",
            "payment:customers:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more customers using the supplied id(s)",
          "actions": [
            "payment:customers:read",
            "payment:customers:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more customers, either creating or wholly replacing",
          "actions": [
            "payment:customers:write",
            "payment:customers:write:store",
            "payment:customers:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied customer with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:customers:write",
            "payment:customers:write:store",
            "payment:customers:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored customer with the supplied id",
          "actions": [
            "payment:customers:write",
            "payment:customers:write:store",
            "payment:customers:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more customers using the supplied id(s)",
          "actions": [
            "payment:customers:write",
            "payment:customers:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "customer",
        "pluralName": "customers"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "name will match <provider type>-<providerId>.",
          "type": "name",
          "sort": true,
          "example": "subscriber1",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "readOnly": true,
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "userRef": {
          "type": "ref",
          "required": true,
          "description": "The user to which this provider customer belongs",
          "primary": true,
          "example": "test:test-enduser",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "providerId": {
          "type": "string",
          "required": true,
          "example": "x1de78",
          "primary": true,
          "description": "Customer reference in exernal system",
          "fieldName": "providerId",
          "fieldNamePath": "providerId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderType"
          ],
          "filters": [
            {
              "label": "providerType",
              "type": "with",
              "fieldNamePath": "providerType",
              "description": "filter by provider type",
              "name": "withProviderType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "freeTrialReceived": {
          "type": "boolean",
          "default": false,
          "description": "Flag indicating whether or not the customer has recieved a subscription with a free trial entitlement.",
          "fieldName": "freeTrialReceived",
          "fieldNamePath": "freeTrialReceived",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)"
          }
        },
        "defaultPaymentOptionToken": {
          "type": "string",
          "description": "Indicates which of the items in paymentOptions is the default. Replaces the use of the default field on the individual payment options.",
          "example": "token1",
          "fieldName": "defaultPaymentOptionToken",
          "fieldNamePath": "defaultPaymentOptionToken",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "paymentOptions": {
          "description": "A customer's stored payment options",
          "array": true,
          "fields": {
            "cardType": {
              "type": "string",
              "allowedValues": [
                {
                  "value": "American Express",
                  "alternatives": [],
                  "label": "American Express",
                  "description": "American Express"
                },
                {
                  "value": "Carte Blanche",
                  "alternatives": [],
                  "label": "Carte Blanche",
                  "description": "Carte Blanche"
                },
                {
                  "value": "China UnionPay",
                  "alternatives": [],
                  "label": "China UnionPay",
                  "description": "China UnionPay"
                },
                {
                  "value": "Diners Club",
                  "alternatives": [],
                  "label": "Diners Club",
                  "description": "Diners Club"
                },
                {
                  "value": "Discover",
                  "alternatives": [],
                  "label": "Discover",
                  "description": "Discover"
                },
                {
                  "value": "JCB",
                  "alternatives": [],
                  "label": "JCB",
                  "description": "JCB"
                },
                {
                  "value": "Laser",
                  "alternatives": [],
                  "label": "Laser",
                  "description": "Laser"
                },
                {
                  "value": "Maestro",
                  "alternatives": [],
                  "label": "Maestro",
                  "description": "Maestro"
                },
                {
                  "value": "MasterCard",
                  "alternatives": [],
                  "label": "MasterCard",
                  "description": "MasterCard"
                },
                {
                  "value": "Solo",
                  "alternatives": [],
                  "label": "Solo",
                  "description": "Solo"
                },
                {
                  "value": "Switch",
                  "alternatives": [],
                  "label": "Switch",
                  "description": "Switch"
                },
                {
                  "value": "Visa",
                  "alternatives": [],
                  "label": "Visa",
                  "description": "Visa"
                },
                {
                  "value": "Unknown",
                  "alternatives": [],
                  "label": "Unknown",
                  "description": "Unknown"
                }
              ],
              "description": "The type of credit/debit card used (only where type is either creditCard or debitCard",
              "example": "Mastercard",
              "fieldName": "cardType",
              "fieldNamePath": "paymentOptions.cardType",
              "allowedValueMappings": {
                "American Express": "American Express",
                "Carte Blanche": "Carte Blanche",
                "China UnionPay": "China UnionPay",
                "Diners Club": "Diners Club",
                "Discover": "Discover",
                "JCB": "JCB",
                "Laser": "Laser",
                "Maestro": "Maestro",
                "MasterCard": "MasterCard",
                "Solo": "Solo",
                "Switch": "Switch",
                "Visa": "Visa",
                "Unknown": "Unknown"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "default": {
              "type": "boolean",
              "transient": true,
              "example": "true",
              "description": "Previously indicated whether this payment method is the customer's default. Now deprecated, use defaultPaymentOptionToken instead",
              "fieldName": "default",
              "fieldNamePath": "paymentOptions.default",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)"
              },
              "readOnly": true,
              "primary": true
            },
            "description": {
              "type": "string",
              "description": "Payment type specific user readable identifer, i.e., for a credit card this would be the last 4 digits of the card number",
              "example": "Paypal account for user1@example.com",
              "fieldName": "description",
              "fieldNamePath": "paymentOptions.description",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "token": {
              "type": "string",
              "example": "token1",
              "description": "Token identifying stored funding instrument in external system",
              "fieldName": "token",
              "fieldNamePath": "paymentOptions.token",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "uniqueIdentifier": {
              "type": "string",
              "example": "238923535245",
              "description": "The provider's unique identifer for this payment method. Note: When the payment method is paypal is is the email address.",
              "fieldName": "uniqueIdentifier",
              "fieldNamePath": "paymentOptions.uniqueIdentifier",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "type": {
              "type": "string",
              "allowedValues": [
                {
                  "value": "creditCard",
                  "alternatives": [],
                  "label": "creditCard",
                  "description": "creditCard"
                },
                {
                  "value": "debitCard",
                  "alternatives": [],
                  "label": "debitCard",
                  "description": "debitCard"
                },
                {
                  "value": "paypal",
                  "alternatives": [],
                  "label": "paypal",
                  "description": "paypal"
                }
              ],
              "description": "The type of payment instrument",
              "example": "paypal",
              "fieldName": "type",
              "fieldNamePath": "paymentOptions.type",
              "allowedValueMappings": {
                "creditCard": "creditCard",
                "debitCard": "debitCard",
                "paypal": "paypal"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            }
          },
          "fieldName": "paymentOptions",
          "fieldNamePath": "paymentOptions",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withProviderType": {
          "label": "providerType",
          "type": "with",
          "fieldNamePath": "providerType",
          "description": "filter by provider type",
          "name": "withProviderType",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "refMatchesSessionUserRef",
          "filterName": "withUserRef",
          "userTypes": [
            "enduser"
          ],
          "message": "can only interact with own provider customers",
          "description": "end users can only interact with provider customers related to themselves"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "enduser cannot modify resource",
          "description": "readonly for endusers"
        }
      ],
      "relationships": {
        "subscriptions": {
          "type": "indirect",
          "resourceType": "subscriptions",
          "filterName": "withUserRef",
          "description": "The subscriptions for this customer",
          "fields": [
            "id",
            "ref",
            "owner",
            "name",
            "userRef",
            "planId",
            "userProfileSubscriptionRef",
            "providerId"
          ],
          "batchSize": 10,
          "name": "subscriptions"
        }
      },
      "serviceName": "payment",
      "singularName": "customer",
      "description": "Maps user profile to customer record of external payment provider",
      "pluralName": "customers",
      "hyphenatedPluralName": "customers",
      "displaySingularName": "customer",
      "displayPluralName": "customers",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "plans": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of plans that may be filtered",
          "actions": [
            "payment:plans:read",
            "payment:plans:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more plans using the supplied id(s)",
          "actions": [
            "payment:plans:read",
            "payment:plans:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more plans, either creating or wholly replacing",
          "actions": [
            "payment:plans:write",
            "payment:plans:write:store",
            "payment:plans:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied plan with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:plans:write",
            "payment:plans:write:store",
            "payment:plans:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored plan with the supplied id",
          "actions": [
            "payment:plans:write",
            "payment:plans:write:store",
            "payment:plans:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more plans using the supplied id(s)",
          "actions": [
            "payment:plans:write",
            "payment:plans:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "plan",
        "pluralName": "plans"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "primary": true,
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "gold-plan",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "planId": {
          "type": "string",
          "required": true,
          "description": "In here we store the provider's plan identifier",
          "example": "h636",
          "fieldName": "planId",
          "fieldNamePath": "planId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withPlanId"
          ],
          "filters": [
            {
              "label": "planId",
              "type": "with",
              "fieldNamePath": "planId",
              "description": "Filter by planId",
              "name": "withPlanId",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "friendlyName": {
          "type": "string",
          "description": "In here we store a meaningful display name for the plan",
          "example": "Silver subscription",
          "fieldName": "friendlyName",
          "fieldNamePath": "friendlyName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "subscriptionCodes": {
          "type": "string",
          "required": true,
          "array": true,
          "description": "A list of subscription codes",
          "example": [
            "subcode1",
            "subcode2"
          ],
          "fieldName": "subscriptionCodes",
          "fieldNamePath": "subscriptionCodes",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withSubscriptionCode"
          ],
          "filters": [
            {
              "label": "subscriptionCodes",
              "type": "with",
              "fieldNamePath": "subscriptionCodes",
              "description": "Filter by subscription code",
              "name": "withSubscriptionCode",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider the subscription plan belongs to",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderType"
          ],
          "filters": [
            {
              "label": "providerType",
              "type": "with",
              "fieldNamePath": "providerType",
              "description": "Filter by providerType",
              "name": "withProviderType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "billingData": {
          "description": "Describes how subscriptions will be billed",
          "fields": {
            "price": {
              "type": "money",
              "required": true,
              "description": "Price to pay",
              "example": {
                "GBP": 2.99
              },
              "fieldName": "price",
              "fieldNamePath": "billingData.price",
              "typeInfo": {
                "keys": {
                  "values": [
                    "CHF",
                    "EUR",
                    "GBP",
                    "USD"
                  ],
                  "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
                },
                "values": {},
                "desc": "money"
              },
              "primary": true
            },
            "trialPeriod": {
              "description": "If supplied, defines the length of the trial period",
              "fields": {
                "interval": {
                  "type": "string",
                  "required": true,
                  "allowedValues": [
                    {
                      "value": "day",
                      "alternatives": [],
                      "label": "day",
                      "description": "day"
                    },
                    {
                      "value": "week",
                      "alternatives": [],
                      "label": "week",
                      "description": "week"
                    },
                    {
                      "value": "month",
                      "alternatives": [],
                      "label": "month",
                      "description": "month"
                    },
                    {
                      "value": "year",
                      "alternatives": [],
                      "label": "year",
                      "description": "year"
                    }
                  ],
                  "description": "Units in which trial period is denominated",
                  "example": "day",
                  "fieldName": "interval",
                  "fieldNamePath": "billingData.trialPeriod.interval",
                  "allowedValueMappings": {
                    "day": "day",
                    "week": "week",
                    "month": "month",
                    "year": "year"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                },
                "intervalCount": {
                  "type": "positiveInteger",
                  "required": true,
                  "description": "Number of intervals that comprise a trial period",
                  "example": "1",
                  "fieldName": "intervalCount",
                  "fieldNamePath": "billingData.trialPeriod.intervalCount",
                  "typeInfo": {
                    "desc": "positive integer",
                    "pattern": "(?:[1-9](?:\\d*))"
                  },
                  "primary": true
                }
              },
              "fieldName": "trialPeriod",
              "fieldNamePath": "billingData.trialPeriod",
              "typeInfo": {}
            },
            "billingPeriod": {
              "description": "Describes when billing will occur",
              "required": true,
              "fields": {
                "interval": {
                  "type": "string",
                  "required": true,
                  "allowedValues": [
                    {
                      "value": "day",
                      "alternatives": [],
                      "label": "day",
                      "description": "day"
                    },
                    {
                      "value": "week",
                      "alternatives": [],
                      "label": "week",
                      "description": "week"
                    },
                    {
                      "value": "month",
                      "alternatives": [],
                      "label": "month",
                      "description": "month"
                    },
                    {
                      "value": "year",
                      "alternatives": [],
                      "label": "year",
                      "description": "year"
                    }
                  ],
                  "description": "Units in which billing period is denominated",
                  "example": "day",
                  "fieldName": "interval",
                  "fieldNamePath": "billingData.billingPeriod.interval",
                  "allowedValueMappings": {
                    "day": "day",
                    "week": "week",
                    "month": "month",
                    "year": "year"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                },
                "intervalCount": {
                  "type": "positiveInteger",
                  "required": true,
                  "description": "Number of intervals that comprise a billing period",
                  "example": 1,
                  "fieldName": "intervalCount",
                  "fieldNamePath": "billingData.billingPeriod.intervalCount",
                  "typeInfo": {
                    "desc": "positive integer",
                    "pattern": "(?:[1-9](?:\\d*))"
                  },
                  "primary": true
                },
                "totalCycles": {
                  "type": "positiveInteger",
                  "description": "If supplied, number of billing cycles after which subscription will cease billing",
                  "example": 12,
                  "fieldName": "totalCycles",
                  "fieldNamePath": "billingData.billingPeriod.totalCycles",
                  "typeInfo": {
                    "desc": "positive integer",
                    "pattern": "(?:[1-9](?:\\d*))"
                  },
                  "primary": true
                },
                "firstBillDate": {
                  "description": "Describes when first bill occurs. If not supplied, implies immediately",
                  "fields": {
                    "monthEnd": {
                      "type": "string",
                      "allowedValues": [
                        {
                          "value": "firstday",
                          "alternatives": [],
                          "label": "firstday",
                          "description": "firstday"
                        },
                        {
                          "value": "lastday",
                          "alternatives": [],
                          "label": "lastday",
                          "description": "lastday"
                        }
                      ],
                      "description": "If set, describes whether billing occurs on either the first day of the month or the last day",
                      "example": "firstday",
                      "fieldName": "monthEnd",
                      "fieldNamePath": "billingData.billingPeriod.firstBillDate.monthEnd",
                      "allowedValueMappings": {
                        "firstday": "firstday",
                        "lastday": "lastday"
                      },
                      "typeInfo": {
                        "desc": "string",
                        "pattern": ".+",
                        "name": "string"
                      },
                      "xfieldedBy": {
                        "type": "exactlyOne",
                        "fields": [
                          "monthEnd",
                          "specificDay"
                        ]
                      },
                      "primary": true
                    },
                    "specificDay": {
                      "type": "positiveInteger",
                      "min": 1,
                      "max": 28,
                      "description": "Describes specific day on which billing will occur",
                      "example": 5,
                      "fieldName": "specificDay",
                      "fieldNamePath": "billingData.billingPeriod.firstBillDate.specificDay",
                      "typeInfo": {
                        "desc": "positive integer",
                        "pattern": "(?:[1-9](?:\\d*))"
                      },
                      "xfieldedBy": {
                        "type": "exactlyOne",
                        "fields": [
                          "monthEnd",
                          "specificDay"
                        ]
                      },
                      "primary": true
                    }
                  },
                  "xfields": [
                    {
                      "type": "exactlyOne",
                      "fields": [
                        "monthEnd",
                        "specificDay"
                      ]
                    }
                  ],
                  "fieldName": "firstBillDate",
                  "fieldNamePath": "billingData.billingPeriod.firstBillDate",
                  "typeInfo": {}
                }
              },
              "fieldName": "billingPeriod",
              "fieldNamePath": "billingData.billingPeriod",
              "typeInfo": {}
            }
          },
          "fieldName": "billingData",
          "fieldNamePath": "billingData",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withPlanId": {
          "label": "planId",
          "type": "with",
          "fieldNamePath": "planId",
          "description": "Filter by planId",
          "name": "withPlanId",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withSubscriptionCode": {
          "label": "subscriptionCodes",
          "type": "with",
          "fieldNamePath": "subscriptionCodes",
          "description": "Filter by subscription code",
          "name": "withSubscriptionCode",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withProviderType": {
          "label": "providerType",
          "type": "with",
          "fieldNamePath": "providerType",
          "description": "Filter by providerType",
          "name": "withProviderType",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "enduser cannot modify resource",
          "description": "readonly for endusers"
        }
      ],
      "relationships": {},
      "serviceName": "payment",
      "singularName": "plan",
      "description": "Snapshot of Subscription Plans as created in the corresponding payment provider portal. Note that this does not guarantee their existence in the payment provider portal",
      "pluralName": "plans",
      "hyphenatedPluralName": "plans",
      "displaySingularName": "plan",
      "displayPluralName": "plans",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "providerConfigs": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "operations": {
        "browse": {
          "description": "Fetches a list of provider configs that may be filtered",
          "actions": [
            "payment:provider-configs:read",
            "payment:provider-configs:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more provider configs using the supplied id(s)",
          "actions": [
            "payment:provider-configs:read",
            "payment:provider-configs:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more provider configs, either creating or wholly replacing",
          "actions": [
            "payment:provider-configs:write",
            "payment:provider-configs:write:store",
            "payment:provider-configs:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied provider config with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:provider-configs:write",
            "payment:provider-configs:write:store",
            "payment:provider-configs:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored provider config with the supplied id",
          "actions": [
            "payment:provider-configs:write",
            "payment:provider-configs:write:store",
            "payment:provider-configs:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more provider configs using the supplied id(s)",
          "actions": [
            "payment:provider-configs:write",
            "payment:provider-configs:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "provider config",
        "pluralName": "provider configs"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "primary": true,
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "Friendly name of configured provider account",
          "type": "name",
          "sort": true,
          "example": "braintreeTest",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The short title of the provider config - used for display purposes",
          "type": "string",
          "sort": true,
          "primary": true,
          "example": "Braintree Provider Config",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "label": "title",
              "type": "with",
              "prefix": true,
              "fieldNamePath": "title",
              "description": "filter by the supplied title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "description": {
          "description": "The description of the provider config",
          "type": "text",
          "example": "Configuration for tenancy to use braintree",
          "fieldName": "description",
          "fieldNamePath": "description",
          "typeInfo": {
            "desc": "text",
            "pattern": ".+"
          }
        },
        "type": {
          "description": "The provider type",
          "type": "string",
          "sort": true,
          "primary": true,
          "example": "braintree",
          "fieldName": "type",
          "fieldNamePath": "type",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "readOnly": true,
          "filteredBy": [
            "withType"
          ],
          "filters": [
            {
              "label": "type",
              "type": "with",
              "fieldNamePath": "type",
              "description": "filter by the supplied type",
              "name": "withType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "braintree": {
          "description": "Braintree specific data",
          "fields": {
            "environment": {
              "type": "string",
              "default": "Sandbox",
              "allowedValues": [
                {
                  "value": "Sandbox",
                  "alternatives": [],
                  "label": "Sandbox",
                  "description": "Sandbox"
                },
                {
                  "value": "Production",
                  "alternatives": [],
                  "label": "Production",
                  "description": "Production"
                }
              ],
              "description": "Allows switching between Braintree sandbox and production environments",
              "example": "Sandbox",
              "fieldName": "environment",
              "fieldNamePath": "braintree.environment",
              "allowedValueMappings": {
                "Sandbox": "Sandbox",
                "Production": "Production"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "merchantId": {
              "type": "string",
              "description": "MerchantId for braintree account",
              "example": "hbb8k9z2fk7dsyj5",
              "fieldName": "merchantId",
              "fieldNamePath": "braintree.merchantId",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "publicKey": {
              "type": "string",
              "description": "Public Api key",
              "example": "12pn3btw96042tt1",
              "fieldName": "publicKey",
              "fieldNamePath": "braintree.publicKey",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "privateKey": {
              "description": "The private key.",
              "type": "string",
              "example": "rz8qa40263ba24rtx183101a44c16ci8",
              "fieldName": "privateKey",
              "fieldNamePath": "braintree.privateKey",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "merchantAccounts": {
              "description": "Merchant accounts for a given MerchantId",
              "array": true,
              "fields": {
                "currency": {
                  "type": "string",
                  "description": "currency code",
                  "example": "GBP",
                  "fieldName": "currency",
                  "fieldNamePath": "braintree.merchantAccounts.currency",
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                },
                "merchantAccountId": {
                  "type": "string",
                  "description": "Merchant Id",
                  "example": "TestMerchant1",
                  "fieldName": "merchantAccountId",
                  "fieldNamePath": "braintree.merchantAccounts.merchantAccountId",
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                }
              },
              "fieldName": "merchantAccounts",
              "fieldNamePath": "braintree.merchantAccounts",
              "typeInfo": {}
            }
          },
          "fieldName": "braintree",
          "fieldNamePath": "braintree",
          "typeInfo": {},
          "xfieldedBy": {
            "type": "exactlyOne",
            "fields": [
              "braintree",
              "stripe"
            ]
          }
        },
        "stripe": {
          "description": "Stripe specific data",
          "fields": {
            "publicKey": {
              "type": "string",
              "description": "Public Api key",
              "example": "pk_test_iTL9H4ztbLFBJILR8P7S2nyp",
              "fieldName": "publicKey",
              "fieldNamePath": "stripe.publicKey",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "privateKey": {
              "description": "The private key.",
              "type": "string",
              "example": "sk_test_t1oHia3Qr9VfZbM8S817C0gW",
              "fieldName": "privateKey",
              "fieldNamePath": "stripe.privateKey",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            }
          },
          "fieldName": "stripe",
          "fieldNamePath": "stripe",
          "typeInfo": {},
          "xfieldedBy": {
            "type": "exactlyOne",
            "fields": [
              "braintree",
              "stripe"
            ]
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title",
            "description"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "label": "title",
          "type": "with",
          "prefix": true,
          "fieldNamePath": "title",
          "description": "filter by the supplied title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withType": {
          "label": "type",
          "type": "with",
          "fieldNamePath": "type",
          "description": "filter by the supplied type",
          "name": "withType",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "prohibited",
          "userTypes": [
            "enduser"
          ],
          "message": "enduser types are not permitted to read or write provider configs",
          "description": "enduser types are not permitted to read or write provider configs"
        }
      ],
      "relationships": {},
      "description": "Represents the configuration of a given provider that is responsible for handling money.",
      "serviceName": "payment",
      "singularName": "providerConfig",
      "pluralName": "providerConfigs",
      "xfields": [
        {
          "type": "exactlyOne",
          "fields": [
            "braintree",
            "stripe"
          ]
        }
      ],
      "hyphenatedPluralName": "provider-configs",
      "displaySingularName": "provider config",
      "displayPluralName": "provider configs",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "subscriptionEvents": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of subscription events that may be filtered",
          "actions": [
            "payment:subscription-events:read",
            "payment:subscription-events:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more subscription events using the supplied id(s)",
          "actions": [
            "payment:subscription-events:read",
            "payment:subscription-events:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more subscription events, either creating or wholly replacing",
          "actions": [
            "payment:subscription-events:write",
            "payment:subscription-events:write:store",
            "payment:subscription-events:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied subscription event with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:subscription-events:write",
            "payment:subscription-events:write:store",
            "payment:subscription-events:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored subscription event with the supplied id",
          "actions": [
            "payment:subscription-events:write",
            "payment:subscription-events:write:store",
            "payment:subscription-events:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more subscription events using the supplied id(s)",
          "actions": [
            "payment:subscription-events:write",
            "payment:subscription-events:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "subscription event",
        "pluralName": "subscription events"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "userRef": {
          "type": "ref",
          "required": true,
          "example": "test:test-enduser",
          "primary": true,
          "description": "The reference to the user that the log event pertains to",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated customer",
              "resourceType": "customers",
              "fieldNamePath": "userRef",
              "fields": [
                "ref"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ],
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "level": {
          "type": "string",
          "required": true,
          "default": "info",
          "allowedValues": [
            {
              "value": "info",
              "alternatives": [],
              "label": "info",
              "description": "info"
            },
            {
              "value": "warn",
              "alternatives": [],
              "label": "warn",
              "description": "warn"
            },
            {
              "value": "error",
              "alternatives": [],
              "label": "error",
              "description": "error"
            }
          ],
          "example": "info",
          "description": "The severity level of the item being logged",
          "fieldName": "level",
          "fieldNamePath": "level",
          "allowedValueMappings": {
            "info": "info",
            "warn": "warn",
            "error": "error"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "type": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "subscription-created",
              "alternatives": [],
              "label": "subscription-created",
              "description": "subscription-created"
            },
            {
              "value": "subscription-cancelled",
              "alternatives": [],
              "label": "subscription-cancelled",
              "description": "subscription-cancelled"
            },
            {
              "value": "subscription-expired",
              "alternatives": [],
              "label": "subscription-expired",
              "description": "subscription-expired"
            },
            {
              "value": "subscription-past-due",
              "alternatives": [],
              "label": "subscription-past-due",
              "description": "subscription-past-due"
            },
            {
              "value": "subscription-charged-successfully",
              "alternatives": [],
              "label": "subscription-charged-successfully",
              "description": "subscription-charged-successfully"
            },
            {
              "value": "subscription-charged-unsuccessfully",
              "alternatives": [],
              "label": "subscription-charged-unsuccessfully",
              "description": "subscription-charged-unsuccessfully"
            },
            {
              "value": "subscription-trial-ended",
              "alternatives": [],
              "label": "subscription-trial-ended",
              "description": "subscription-trial-ended"
            },
            {
              "value": "subscription-active",
              "alternatives": [],
              "label": "subscription-active",
              "description": "subscription-active"
            },
            {
              "value": "subscription-updated",
              "alternatives": [],
              "label": "subscription-updated",
              "description": "subscription-updated"
            },
            {
              "value": "subscription-error",
              "alternatives": [],
              "label": "subscription-error",
              "description": "subscription-error"
            }
          ],
          "example": "subscriptioncreated",
          "description": "the type of notification that is being logged",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "subscription-created": "subscription-created",
            "subscription-cancelled": "subscription-cancelled",
            "subscription-expired": "subscription-expired",
            "subscription-past-due": "subscription-past-due",
            "subscription-charged-successfully": "subscription-charged-successfully",
            "subscription-charged-unsuccessfully": "subscription-charged-unsuccessfully",
            "subscription-trial-ended": "subscription-trial-ended",
            "subscription-active": "subscription-active",
            "subscription-updated": "subscription-updated",
            "subscription-error": "subscription-error"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "subscriptionRef": {
          "type": "ref",
          "primary": true,
          "example": "test:braintreeSub1",
          "description": "The reference to the subscription the log event relates to",
          "fieldName": "subscriptionRef",
          "fieldNamePath": "subscriptionRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          }
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "currentBillingCycle": {
          "type": "integer",
          "description": "The current billing cycle that the subscription is in",
          "example": "1",
          "fieldName": "currentBillingCycle",
          "fieldNamePath": "currentBillingCycle",
          "typeInfo": {
            "desc": "integer",
            "pattern": "-?[0-9]+"
          }
        },
        "trialPeriod": {
          "type": "boolean",
          "description": "This field indicates whether or not the subscription is in trial period",
          "example": "true",
          "fieldName": "trialPeriod",
          "fieldNamePath": "trialPeriod",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)"
          }
        },
        "trialDuration": {
          "type": "integer",
          "description": "The number of [trialDurationUnit]s that the trial will run for",
          "example": "1",
          "fieldName": "trialDuration",
          "fieldNamePath": "trialDuration",
          "typeInfo": {
            "desc": "integer",
            "pattern": "-?[0-9]+"
          }
        },
        "trialDurationUnit": {
          "type": "string",
          "allowedValues": [
            {
              "value": "days",
              "alternatives": [],
              "label": "days",
              "description": "days"
            },
            {
              "value": "months",
              "alternatives": [],
              "label": "months",
              "description": "months"
            }
          ],
          "description": "The unit of time in which the trial duration is specified",
          "example": "days",
          "fieldName": "trialDurationUnit",
          "fieldNamePath": "trialDurationUnit",
          "allowedValueMappings": {
            "days": "days",
            "months": "months"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "refMatchesSessionUserRef",
          "filterName": "withUserRef",
          "userTypes": [
            "enduser"
          ],
          "message": "can only interact with own provider customers",
          "description": "end users can only interact with provider customers related to themselves"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated customer",
          "resourceType": "customers",
          "fieldNamePath": "userRef",
          "fields": [
            "ref"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "singularName": "subscriptionEvent",
      "description": "Event log for subscription specific events",
      "pluralName": "subscriptionEvents",
      "hyphenatedPluralName": "subscription-events",
      "displaySingularName": "subscription event",
      "displayPluralName": "subscription events",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "subscriptions": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of subscriptions that may be filtered",
          "actions": [
            "payment:subscriptions:read",
            "payment:subscriptions:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more subscriptions using the supplied id(s)",
          "actions": [
            "payment:subscriptions:read",
            "payment:subscriptions:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more subscriptions, either creating or wholly replacing",
          "actions": [
            "payment:subscriptions:write",
            "payment:subscriptions:write:store",
            "payment:subscriptions:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied subscription with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:subscriptions:write",
            "payment:subscriptions:write:store",
            "payment:subscriptions:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored subscription with the supplied id",
          "actions": [
            "payment:subscriptions:write",
            "payment:subscriptions:write:store",
            "payment:subscriptions:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more subscriptions using the supplied id(s)",
          "actions": [
            "payment:subscriptions:write",
            "payment:subscriptions:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "subscription",
        "pluralName": "subscriptions"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ],
          "primary": true
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ],
          "primary": true
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "primary": true
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "btsub1",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "planId": {
          "type": "string",
          "required": true,
          "description": "The subscription plan reference for this subscription",
          "example": "btsubplan1",
          "fieldName": "planId",
          "fieldNamePath": "planId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withPlanId"
          ],
          "filters": [
            {
              "label": "planId",
              "type": "with",
              "fieldNamePath": "planId",
              "description": "filter by the supplied planId",
              "name": "withPlanId",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "userProfileSubscriptionRef": {
          "type": "ref",
          "description": "The ref for the corresponding subscription in the userProfile service",
          "example": "test:subscription12",
          "fieldName": "userProfileSubscriptionRef",
          "fieldNamePath": "userProfileSubscriptionRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          }
        },
        "userRef": {
          "type": "ref",
          "required": true,
          "description": "The user to which this subscription belongs",
          "example": "test:test-enduser",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied profile reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "price": {
          "type": "money",
          "required": true,
          "description": "The price of the subscription",
          "example": {
            "GBP": 2.99
          },
          "fieldName": "price",
          "fieldNamePath": "price",
          "typeInfo": {
            "keys": {
              "values": [
                "CHF",
                "EUR",
                "GBP",
                "USD"
              ],
              "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
            },
            "values": {},
            "desc": "money"
          }
        },
        "providerId": {
          "type": "string",
          "example": "x1de78",
          "description": "The provider's reference for this subscription",
          "fieldName": "providerId",
          "fieldNamePath": "providerId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderId"
          ],
          "filters": [
            {
              "label": "providerId",
              "type": "with",
              "fieldNamePath": "providerId",
              "description": "filter by the supplied providerId",
              "name": "withProviderId",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "customerRef": {
          "type": "ref",
          "example": "test:x1de78",
          "required": true,
          "description": "The customer resource reference",
          "fieldName": "customerRef",
          "fieldNamePath": "customerRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated provider customer",
              "resourceType": "customers",
              "fieldNamePath": "customerRef",
              "fields": [
                "ref",
                "owner",
                "name",
                "userRef",
                "providerId",
                "freeTrialReceived",
                "providerType",
                "paymentOptions"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ]
        },
        "nextBillingDate": {
          "type": "date",
          "description": "The date in which the next payment will be taken. This date has no time part. Where a subscription is in a trial period this will be the first billing date.",
          "example": "2014-05-15",
          "fieldName": "nextBillingDate",
          "fieldNamePath": "nextBillingDate"
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider the subscription belongs to",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderType"
          ],
          "filters": [
            {
              "label": "providerType",
              "type": "with",
              "fieldNamePath": "providerType",
              "description": "filter by the supplied providerType",
              "name": "withProviderType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "Current status of the subscription",
          "allowedValues": [
            {
              "value": "pending",
              "alternatives": [],
              "label": "pending",
              "description": "pending"
            },
            {
              "value": "active",
              "alternatives": [],
              "label": "active",
              "description": "active"
            },
            {
              "value": "cancelled",
              "alternatives": [],
              "label": "cancelled",
              "description": "cancelled"
            },
            {
              "value": "expired",
              "alternatives": [],
              "label": "expired",
              "description": "expired"
            },
            {
              "value": "pending-cancellation",
              "alternatives": [],
              "label": "pending-cancellation",
              "description": "pending-cancellation"
            },
            {
              "value": "past-due",
              "alternatives": [],
              "label": "past-due",
              "description": "past-due"
            }
          ],
          "example": "active",
          "fieldName": "status",
          "fieldNamePath": "status",
          "allowedValueMappings": {
            "pending": "pending",
            "active": "active",
            "cancelled": "cancelled",
            "expired": "expired",
            "pending-cancellation": "pending-cancellation",
            "past-due": "past-due"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withStatus"
          ],
          "filters": [
            {
              "label": "status",
              "type": "with",
              "fieldNamePath": "status",
              "description": "filter by the supplied status",
              "name": "withStatus",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "expiresAt": {
          "type": "timestamp",
          "required": true,
          "sort": true,
          "description": "The point at which the subscription expires formatted as a ISO 8601 UTC timestamp",
          "example": "2014-05-15T15:16:05.592Z",
          "fieldName": "expiresAt",
          "fieldNamePath": "expiresAt",
          "filteredBy": [
            "withExpiresAt"
          ],
          "filters": [
            {
              "label": "expiresAt",
              "type": "with",
              "range": true,
              "fieldNamePath": "expiresAt",
              "description": "filter by the supplied expiry timestamp",
              "name": "withExpiresAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "trialPeriodStartsAt": {
          "type": "timestamp",
          "example": "2015-12-01T13:00:00.000Z",
          "description": "The timestamp when the trial period starts",
          "fieldName": "trialPeriodStartsAt",
          "fieldNamePath": "trialPeriodStartsAt",
          "filteredBy": [
            "withTrialPeriodStartsAt"
          ],
          "filters": [
            {
              "label": "trialPeriodStartsAt",
              "fieldNamePath": "trialPeriodStartsAt",
              "description": "filter by the supplied trialPeriodStartsAt timestamp",
              "type": "with",
              "range": true,
              "name": "withTrialPeriodStartsAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "trialPeriodEndsAt": {
          "type": "timestamp",
          "example": "2016-01-01T13:00:00.000Z",
          "description": "The timestamp when the trial period ends",
          "fieldName": "trialPeriodEndsAt",
          "fieldNamePath": "trialPeriodEndsAt",
          "filteredBy": [
            "withTrialPeriodEndsAt"
          ],
          "filters": [
            {
              "label": "trialPeriodEndsAt",
              "fieldNamePath": "trialPeriodEndsAt",
              "description": "filter by the supplied trialPeriodEndsAt timestamp",
              "type": "with",
              "range": true,
              "name": "withTrialPeriodEndsAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "token": {
          "type": "string",
          "example": "bznqh1",
          "description": "payment method token that identifies stored payment method used for associated transactions.",
          "fieldName": "token",
          "fieldNamePath": "token",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied profile reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withPlanId": {
          "label": "planId",
          "type": "with",
          "fieldNamePath": "planId",
          "description": "filter by the supplied planId",
          "name": "withPlanId",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withProviderId": {
          "label": "providerId",
          "type": "with",
          "fieldNamePath": "providerId",
          "description": "filter by the supplied providerId",
          "name": "withProviderId",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withProviderType": {
          "label": "providerType",
          "type": "with",
          "fieldNamePath": "providerType",
          "description": "filter by the supplied providerType",
          "name": "withProviderType",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withStatus": {
          "label": "status",
          "type": "with",
          "fieldNamePath": "status",
          "description": "filter by the supplied status",
          "name": "withStatus",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withExpiresAt": {
          "label": "expiresAt",
          "type": "with",
          "range": true,
          "fieldNamePath": "expiresAt",
          "description": "filter by the supplied expiry timestamp",
          "name": "withExpiresAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withTrialPeriodStartsAt": {
          "label": "trialPeriodStartsAt",
          "fieldNamePath": "trialPeriodStartsAt",
          "description": "filter by the supplied trialPeriodStartsAt timestamp",
          "type": "with",
          "range": true,
          "name": "withTrialPeriodStartsAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withTrialPeriodEndsAt": {
          "label": "trialPeriodEndsAt",
          "fieldNamePath": "trialPeriodEndsAt",
          "description": "filter by the supplied trialPeriodEndsAt timestamp",
          "type": "with",
          "range": true,
          "name": "withTrialPeriodEndsAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "refMatchesSessionUserRef",
          "filterName": "withUserRef",
          "userTypes": [
            "enduser"
          ],
          "message": "can only interact with own subscriptions",
          "description": "end users can only interact with their own subscriptons"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated provider customer",
          "resourceType": "customers",
          "fieldNamePath": "customerRef",
          "fields": [
            "ref",
            "owner",
            "name",
            "userRef",
            "providerId",
            "freeTrialReceived",
            "providerType",
            "paymentOptions"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "singularName": "subscription",
      "description": "Records of customer subscription purchases",
      "pluralName": "subscriptions",
      "hyphenatedPluralName": "subscriptions",
      "displaySingularName": "subscription",
      "displayPluralName": "subscriptions",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "tenantConfigs": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of tenant configs that may be filtered",
          "actions": [
            "payment:tenant-configs:read",
            "payment:tenant-configs:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more tenant configs using the supplied id(s)",
          "actions": [
            "payment:tenant-configs:read",
            "payment:tenant-configs:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more tenant configs, either creating or wholly replacing",
          "actions": [
            "payment:tenant-configs:write",
            "payment:tenant-configs:write:store",
            "payment:tenant-configs:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied tenant config with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:tenant-configs:write",
            "payment:tenant-configs:write:store",
            "payment:tenant-configs:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored tenant config with the supplied id",
          "actions": [
            "payment:tenant-configs:write",
            "payment:tenant-configs:write:store",
            "payment:tenant-configs:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more tenant configs using the supplied id(s)",
          "actions": [
            "payment:tenant-configs:write",
            "payment:tenant-configs:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "tenant config",
        "pluralName": "tenant configs"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "primary": true,
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "primary",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "metadataUri": {
          "description": "The tenant specific metadata URI.",
          "type": "string",
          "required": true,
          "example": "http://svcs/GetOffer/tenantName/",
          "fieldName": "metadataUri",
          "fieldNamePath": "metadataUri",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "subscriptionExpiryGracePeriod": {
          "description": "Defines a grace period that will be added to the date received from the payment provider in order to create the expiresAt date for the subscription",
          "type": "duration",
          "required": true,
          "example": "P1D",
          "fieldName": "subscriptionExpiryGracePeriod",
          "fieldNamePath": "subscriptionExpiryGracePeriod",
          "typeInfo": {
            "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
            "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
          }
        },
        "singleTrialPerCustomer": {
          "type": "boolean",
          "description": "If true, the customer record of the customer attempting to purchase a subscription with a trial will be checked to determine if the customer has previously received a free trial. If they have, the service will respond with a bad request response unless the skipTrialPeriod flag is set to true in the purchase request (indicating that the user has been warned that they will not get a trial period).",
          "example": false,
          "default": false,
          "fieldName": "singleTrialPerCustomer",
          "fieldNamePath": "singleTrialPerCustomer",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)"
          }
        },
        "singleTrialPerEmailAddress": {
          "type": "boolean",
          "description": "If true, the email address assigned to the customer attempting to purchase a subscription with a trial will be checked against those recorded in usedEmailAddresses. If present,  the service will respond with a bad request response unless the skipTrialPeriod flag is set to true in the purchase request (indicating that the user has been warned  that they will not get a trial period).",
          "example": false,
          "default": false,
          "fieldName": "singleTrialPerEmailAddress",
          "fieldNamePath": "singleTrialPerEmailAddress",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)"
          }
        },
        "singleTrialPerPaymentMethod": {
          "type": "boolean",
          "description": "If true, the payment method used to purchase a subscription which has a trial period will be checked against those recorded in usedPaymentMethods. If present,  the service will respond with a bad request response unless the skipTrialPeriod flag is set to true in the purchase request (indicating that the user has been warned  that they will not get a trial period).",
          "example": false,
          "default": false,
          "fieldName": "singleTrialPerPaymentMethod",
          "fieldNamePath": "singleTrialPerPaymentMethod",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "prohibited",
          "userTypes": [
            "enduser"
          ],
          "message": "enduser types are not permitted to read or write adapter configs",
          "description": "enduser types are not permitted to read or write adapter configs,they are for internal use by the service itself"
        }
      ],
      "relationships": {},
      "serviceName": "payment",
      "singularName": "tenantConfig",
      "pluralName": "tenantConfigs",
      "description": "Represents a collection of tenant specific configuration options.",
      "hyphenatedPluralName": "tenant-configs",
      "displaySingularName": "tenant config",
      "displayPluralName": "tenant configs",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "transactionEvents": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of transaction events that may be filtered",
          "actions": [
            "payment:transaction-events:read",
            "payment:transaction-events:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more transaction events using the supplied id(s)",
          "actions": [
            "payment:transaction-events:read",
            "payment:transaction-events:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more transaction events, either creating or wholly replacing",
          "actions": [
            "payment:transaction-events:write",
            "payment:transaction-events:write:store",
            "payment:transaction-events:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied transaction event with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:transaction-events:write",
            "payment:transaction-events:write:store",
            "payment:transaction-events:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored transaction event with the supplied id",
          "actions": [
            "payment:transaction-events:write",
            "payment:transaction-events:write:store",
            "payment:transaction-events:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more transaction events using the supplied id(s)",
          "actions": [
            "payment:transaction-events:write",
            "payment:transaction-events:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "transaction event",
        "pluralName": "transaction events"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "userRef": {
          "type": "ref",
          "required": true,
          "example": "test:test-enduser",
          "primary": true,
          "description": "The reference to the user that the log event pertains to",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated customer",
              "resourceType": "customers",
              "fieldNamePath": "userRef",
              "fields": [
                "ref"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ],
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "level": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "info",
              "alternatives": [],
              "label": "info",
              "description": "info"
            },
            {
              "value": "warn",
              "alternatives": [],
              "label": "warn",
              "description": "warn"
            },
            {
              "value": "error",
              "alternatives": [],
              "label": "error",
              "description": "error"
            }
          ],
          "example": "info",
          "description": "The severity level of the item being logged",
          "fieldName": "level",
          "fieldNamePath": "level",
          "allowedValueMappings": {
            "info": "info",
            "warn": "warn",
            "error": "error"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "type": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "transaction-created",
              "alternatives": [],
              "label": "transaction-created",
              "description": "transaction-created"
            }
          ],
          "example": "transaction-created",
          "description": "the type of notification that is being logged",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "transaction-created": "transaction-created"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "transactionRef": {
          "type": "ref",
          "primary": true,
          "example": "test:braintreeSub1",
          "description": "The reference to the transaction the log event relates to",
          "fieldName": "transactionRef",
          "fieldNamePath": "transactionRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          }
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "refMatchesSessionUserRef",
          "filterName": "withUserRef",
          "userTypes": [
            "enduser"
          ],
          "message": "can only interact with own provider customers",
          "description": "end users can only interact with provider customers related to themselves"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated customer",
          "resourceType": "customers",
          "fieldNamePath": "userRef",
          "fields": [
            "ref"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "singularName": "transactionEvent",
      "description": "Event log for transaction specific events",
      "pluralName": "transactionEvents",
      "hyphenatedPluralName": "transaction-events",
      "displaySingularName": "transaction event",
      "displayPluralName": "transaction events",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "transactions": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of transactions that may be filtered",
          "actions": [
            "payment:transactions:read",
            "payment:transactions:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more transactions using the supplied id(s)",
          "actions": [
            "payment:transactions:read",
            "payment:transactions:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more transactions, either creating or wholly replacing",
          "actions": [
            "payment:transactions:write",
            "payment:transactions:write:store",
            "payment:transactions:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied transaction with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:transactions:write",
            "payment:transactions:write:store",
            "payment:transactions:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored transaction with the supplied id",
          "actions": [
            "payment:transactions:write",
            "payment:transactions:write:store",
            "payment:transactions:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more transactions using the supplied id(s)",
          "actions": [
            "payment:transactions:write",
            "payment:transactions:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "transaction",
        "pluralName": "transactions"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "braintreePurchase1",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "description": {
          "type": "string",
          "example": "V for Vendetta",
          "primary": true,
          "description": "Description of the item being purchased",
          "fieldName": "description",
          "fieldNamePath": "description",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "userRef": {
          "type": "ref",
          "required": true,
          "description": "The user to which this provider customer belongs",
          "primary": true,
          "example": "test:test-enduser",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "providerId": {
          "type": "string",
          "example": "x1de78",
          "primary": true,
          "description": "Transaction reference in external system",
          "fieldName": "providerId",
          "fieldNamePath": "providerId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "paymentDescription": {
          "type": "string",
          "example": "Visa **** **** **** 1111",
          "primary": true,
          "description": "Description of the payment method for this transaction",
          "fieldName": "paymentDescription",
          "fieldNamePath": "paymentDescription",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "customerRef": {
          "type": "ref",
          "example": "test:test-user1",
          "primary": true,
          "description": "Reference to customer within providerCustomer resource",
          "fieldName": "customerRef",
          "fieldNamePath": "customerRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated provider customer",
              "resourceType": "customers",
              "fieldNamePath": "customerRef",
              "fields": [
                "ref"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ]
        },
        "orderRef": {
          "type": "ref",
          "required": true,
          "description": "Reference to order",
          "example": "test:000000000000000000000000",
          "fieldName": "orderRef",
          "fieldNamePath": "orderRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withOrderRef"
          ],
          "filters": [
            {
              "label": "orderRef",
              "type": "with",
              "fieldNamePath": "orderRef",
              "description": "filter by the supplied order reference",
              "name": "withOrderRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "offerId": {
          "type": "string",
          "required": true,
          "description": "Identifier for the offer purchased",
          "example": "test:offer100",
          "fieldName": "offerId",
          "fieldNamePath": "offerId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withOfferId"
          ],
          "filters": [
            {
              "label": "offerId",
              "type": "with",
              "fieldNamePath": "offerId",
              "description": "filter by the supplied offer Id",
              "name": "withOfferId",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "contentId": {
          "type": "string",
          "required": true,
          "description": "Identifier for the offer purchased",
          "example": "test:movie100",
          "fieldName": "contentId",
          "fieldNamePath": "contentId",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withContentId"
          ],
          "filters": [
            {
              "label": "contentId",
              "type": "with",
              "fieldNamePath": "contentId",
              "description": "filter by the supplied content Id",
              "name": "withContentId",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "price": {
          "type": "money",
          "required": true,
          "description": "Price paid",
          "example": {
            "GBP": 2.99
          },
          "fieldName": "price",
          "fieldNamePath": "price",
          "typeInfo": {
            "keys": {
              "values": [
                "CHF",
                "EUR",
                "GBP",
                "USD"
              ],
              "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
            },
            "values": {},
            "desc": "money"
          }
        },
        "status": {
          "type": "string",
          "required": true,
          "description": "Current status of the transaction",
          "allowedValues": [
            {
              "value": "pending",
              "alternatives": [],
              "label": "pending",
              "description": "pending"
            },
            {
              "value": "paid",
              "alternatives": [],
              "label": "paid",
              "description": "paid"
            },
            {
              "value": "entitled",
              "alternatives": [],
              "label": "entitled",
              "description": "entitled"
            },
            {
              "value": "cancelled",
              "alternatives": [],
              "label": "cancelled",
              "description": "cancelled"
            }
          ],
          "example": "paid",
          "fieldName": "status",
          "fieldNamePath": "status",
          "allowedValueMappings": {
            "pending": "pending",
            "paid": "paid",
            "entitled": "entitled",
            "cancelled": "cancelled"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withStatus"
          ],
          "filters": [
            {
              "label": "status",
              "type": "with",
              "fieldNamePath": "status",
              "description": "filter by the supplied status",
              "name": "withStatus",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withOfferId": {
          "label": "offerId",
          "type": "with",
          "fieldNamePath": "offerId",
          "description": "filter by the supplied offer Id",
          "name": "withOfferId",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withContentId": {
          "label": "contentId",
          "type": "with",
          "fieldNamePath": "contentId",
          "description": "filter by the supplied content Id",
          "name": "withContentId",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withOrderRef": {
          "label": "orderRef",
          "type": "with",
          "fieldNamePath": "orderRef",
          "description": "filter by the supplied order reference",
          "name": "withOrderRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withStatus": {
          "label": "status",
          "type": "with",
          "fieldNamePath": "status",
          "description": "filter by the supplied status",
          "name": "withStatus",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "refMatchesSessionUserRef",
          "filterName": "withUserRef",
          "userTypes": [
            "enduser"
          ],
          "message": "can only interact with own provider customers",
          "description": "end users can only interact with provider customers related to themselves"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated provider customer",
          "resourceType": "customers",
          "fieldNamePath": "customerRef",
          "fields": [
            "ref"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "singularName": "transaction",
      "description": "Record of customer purchases",
      "pluralName": "transactions",
      "hyphenatedPluralName": "transactions",
      "displaySingularName": "transaction",
      "displayPluralName": "transactions",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "usedEmailAddresses": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "operations": {
        "browse": {
          "description": "Fetches a list of used email addresses that may be filtered",
          "actions": [
            "payment:used-email-addresses:read",
            "payment:used-email-addresses:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more used email addresses using the supplied id(s)",
          "actions": [
            "payment:used-email-addresses:read",
            "payment:used-email-addresses:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more used email addresses, either creating or wholly replacing",
          "actions": [
            "payment:used-email-addresses:write",
            "payment:used-email-addresses:write:store",
            "payment:used-email-addresses:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied used email address with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:used-email-addresses:write",
            "payment:used-email-addresses:write:store",
            "payment:used-email-addresses:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored used email address with the supplied id",
          "actions": [
            "payment:used-email-addresses:write",
            "payment:used-email-addresses:write:store",
            "payment:used-email-addresses:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more used email addresses using the supplied id(s)",
          "actions": [
            "payment:used-email-addresses:write",
            "payment:used-email-addresses:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "used email address",
        "pluralName": "used email addresses"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "primary": true,
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "customerRef": {
          "type": "string",
          "required": true,
          "description": "Link to customer resource.",
          "example": "test:braintree-x1de78",
          "fieldName": "customerRef",
          "fieldNamePath": "customerRef",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated provider customer",
              "resourceType": "customers",
              "fieldNamePath": "customerRef",
              "fields": [
                "ref",
                "name"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ]
        },
        "userRef": {
          "type": "string",
          "required": true,
          "description": "userRef from original request that caused the email address to be stored.",
          "example": "test:test-enduser",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "emailAddress": {
          "type": "string",
          "required": true,
          "description": "The email addresses associated with the customer",
          "example": "richard.merry@piksel.com",
          "fieldName": "emailAddress",
          "fieldNamePath": "emailAddress",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withEmailAddress"
          ],
          "filters": [
            {
              "label": "emailAddress",
              "type": "with",
              "fieldNamePath": "emailAddress",
              "description": "filter by the supplied email address",
              "name": "withEmailAddress",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider on which the payment method exists.",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderType"
          ],
          "filters": [
            {
              "label": "providerType",
              "type": "with",
              "fieldNamePath": "providerType",
              "description": "filter by the supplied providerType",
              "name": "withProviderType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withEmailAddress": {
          "label": "emailAddress",
          "type": "with",
          "fieldNamePath": "emailAddress",
          "description": "filter by the supplied email address",
          "name": "withEmailAddress",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withProviderType": {
          "label": "providerType",
          "type": "with",
          "fieldNamePath": "providerType",
          "description": "filter by the supplied providerType",
          "name": "withProviderType",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated provider customer",
          "resourceType": "customers",
          "fieldNamePath": "customerRef",
          "fields": [
            "ref",
            "name"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "pluralName": "usedEmailAddresses",
      "singularName": "usedEmailAddress",
      "description": "A record of all email addresse  ever used to purchase a subscription with a trial.This allows us to enforce the one-time free trial policy.",
      "hyphenatedPluralName": "used-email-addresses",
      "displaySingularName": "used email address",
      "displayPluralName": "used email addresses",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "usedPaymentMethods": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "operations": {
        "browse": {
          "description": "Fetches a list of used payment methods that may be filtered",
          "actions": [
            "payment:used-payment-methods:read",
            "payment:used-payment-methods:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more used payment methods using the supplied id(s)",
          "actions": [
            "payment:used-payment-methods:read",
            "payment:used-payment-methods:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more used payment methods, either creating or wholly replacing",
          "actions": [
            "payment:used-payment-methods:write",
            "payment:used-payment-methods:write:store",
            "payment:used-payment-methods:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied used payment method with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:used-payment-methods:write",
            "payment:used-payment-methods:write:store",
            "payment:used-payment-methods:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored used payment method with the supplied id",
          "actions": [
            "payment:used-payment-methods:write",
            "payment:used-payment-methods:write:store",
            "payment:used-payment-methods:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more used payment methods using the supplied id(s)",
          "actions": [
            "payment:used-payment-methods:write",
            "payment:used-payment-methods:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "used payment method",
        "pluralName": "used payment methods"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ],
          "primary": true
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ],
          "primary": true
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "primary": true
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "customerRef": {
          "type": "string",
          "required": true,
          "description": "Link to customer resource",
          "example": "test:braintree-x1de78",
          "fieldName": "customerRef",
          "fieldNamePath": "customerRef",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "relatedBy": [
            "customer"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated provider customer",
              "resourceType": "customers",
              "fieldNamePath": "customerRef",
              "fields": [
                "ref",
                "name"
              ],
              "batchSize": 10,
              "name": "customer"
            }
          ]
        },
        "userRef": {
          "type": "string",
          "required": true,
          "description": "userRef from original request that caused the payment method to be stored",
          "example": "test:test-enduser",
          "fieldName": "userRef",
          "fieldNamePath": "userRef",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withUserRef"
          ],
          "filters": [
            {
              "label": "userRef",
              "type": "with",
              "fieldNamePath": "userRef",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied user reference",
              "name": "withUserRef",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "paymentMethodIdentifier": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the payment method.",
          "example": "23981299238458",
          "fieldName": "paymentMethodIdentifier",
          "fieldNamePath": "paymentMethodIdentifier",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withPaymentMethodIdentifier"
          ],
          "filters": [
            {
              "label": "paymentMethodIdentifier",
              "type": "with",
              "fieldNamePath": "paymentMethodIdentifier",
              "description": "filter by the supplied paymentMethodIdentifier",
              "name": "withPaymentMethodIdentifier",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "paymentMethodType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "creditCard",
              "alternatives": [],
              "label": "creditCard",
              "description": "creditCard"
            },
            {
              "value": "debitCard",
              "alternatives": [],
              "label": "debitCard",
              "description": "debitCard"
            },
            {
              "value": "paypal",
              "alternatives": [],
              "label": "paypal",
              "description": "paypal"
            }
          ],
          "description": "The payment method type.",
          "example": "creditCard",
          "fieldName": "paymentMethodType",
          "fieldNamePath": "paymentMethodType",
          "allowedValueMappings": {
            "creditCard": "creditCard",
            "debitCard": "debitCard",
            "paypal": "paypal"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withPaymentMethodType"
          ],
          "filters": [
            {
              "label": "paymentMethodType",
              "type": "with",
              "fieldNamePath": "paymentMethodType",
              "description": "filter by the supplied paymentMethodType",
              "name": "withPaymentMethodType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "providerType": {
          "type": "string",
          "required": true,
          "allowedValues": [
            {
              "value": "braintree",
              "alternatives": [],
              "label": "braintree",
              "description": "braintree"
            },
            {
              "value": "stripe",
              "alternatives": [],
              "label": "stripe",
              "description": "stripe"
            }
          ],
          "description": "The payment provider on which the payment method exists.",
          "example": "braintree",
          "fieldName": "providerType",
          "fieldNamePath": "providerType",
          "allowedValueMappings": {
            "braintree": "braintree",
            "stripe": "stripe"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withProviderType"
          ],
          "filters": [
            {
              "label": "providerType",
              "type": "with",
              "fieldNamePath": "providerType",
              "description": "filter by the supplied providerType",
              "name": "withProviderType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withUserRef": {
          "label": "userRef",
          "type": "with",
          "fieldNamePath": "userRef",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied user reference",
          "name": "withUserRef",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withPaymentMethodIdentifier": {
          "label": "paymentMethodIdentifier",
          "type": "with",
          "fieldNamePath": "paymentMethodIdentifier",
          "description": "filter by the supplied paymentMethodIdentifier",
          "name": "withPaymentMethodIdentifier",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withPaymentMethodType": {
          "label": "paymentMethodType",
          "type": "with",
          "fieldNamePath": "paymentMethodType",
          "description": "filter by the supplied paymentMethodType",
          "name": "withPaymentMethodType",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withProviderType": {
          "label": "providerType",
          "type": "with",
          "fieldNamePath": "providerType",
          "description": "filter by the supplied providerType",
          "name": "withProviderType",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        }
      ],
      "relationships": {
        "customer": {
          "type": "direct",
          "description": "The associated provider customer",
          "resourceType": "customers",
          "fieldNamePath": "customerRef",
          "fields": [
            "ref",
            "name"
          ],
          "batchSize": 10,
          "name": "customer"
        }
      },
      "serviceName": "payment",
      "pluralName": "usedPaymentMethods",
      "singularName": "usedPaymentMethod",
      "description": "A record of all payment methods ever used to purchase a subscription. This allows us to enforce the one-time free trial policy.",
      "hyphenatedPluralName": "used-payment-methods",
      "displaySingularName": "used payment method",
      "displayPluralName": "used payment methods",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "tenancyConfigurations": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of tenancy configurations that may be filtered",
          "actions": [
            "payment:tenancy-configurations:read",
            "payment:tenancy-configurations:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more tenancy configurations using the supplied id(s)",
          "actions": [
            "payment:tenancy-configurations:read",
            "payment:tenancy-configurations:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more tenancy configurations, either creating or wholly replacing",
          "actions": [
            "payment:tenancy-configurations:write",
            "payment:tenancy-configurations:write:store",
            "payment:tenancy-configurations:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied tenancy configuration with the supplied id, either creating or wholly replacing",
          "actions": [
            "payment:tenancy-configurations:write",
            "payment:tenancy-configurations:write:store",
            "payment:tenancy-configurations:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored tenancy configuration with the supplied id",
          "actions": [
            "payment:tenancy-configurations:write",
            "payment:tenancy-configurations:write:store",
            "payment:tenancy-configurations:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more tenancy configurations using the supplied id(s)",
          "actions": [
            "payment:tenancy-configurations:write",
            "payment:tenancy-configurations:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "tenancy configuration",
        "pluralName": "tenancy configurations"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ],
          "primary": true
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ],
          "primary": true
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "primary": true
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "retentionPeriods": {
          "description": "Represents data retention periods",
          "array": true,
          "fields": {
            "resource": {
              "description": "the resource the retention period applies to",
              "type": "string",
              "allowedValues": [
                {
                  "value": "default",
                  "alternatives": [],
                  "label": "default",
                  "description": "default"
                },
                {
                  "value": "customers",
                  "alternatives": [],
                  "label": "customers",
                  "description": "customers"
                },
                {
                  "value": "plans",
                  "alternatives": [],
                  "label": "plans",
                  "description": "plans"
                },
                {
                  "value": "providerConfigs",
                  "alternatives": [],
                  "label": "providerConfigs",
                  "description": "providerConfigs"
                },
                {
                  "value": "subscriptionEvents",
                  "alternatives": [],
                  "label": "subscriptionEvents",
                  "description": "subscriptionEvents"
                },
                {
                  "value": "subscriptions",
                  "alternatives": [],
                  "label": "subscriptions",
                  "description": "subscriptions"
                },
                {
                  "value": "tenantConfigs",
                  "alternatives": [],
                  "label": "tenantConfigs",
                  "description": "tenantConfigs"
                },
                {
                  "value": "transactionEvents",
                  "alternatives": [],
                  "label": "transactionEvents",
                  "description": "transactionEvents"
                },
                {
                  "value": "transactions",
                  "alternatives": [],
                  "label": "transactions",
                  "description": "transactions"
                },
                {
                  "value": "usedEmailAddresses",
                  "alternatives": [],
                  "label": "usedEmailAddresses",
                  "description": "usedEmailAddresses"
                },
                {
                  "value": "usedPaymentMethods",
                  "alternatives": [],
                  "label": "usedPaymentMethods",
                  "description": "usedPaymentMethods"
                }
              ],
              "example": "customers",
              "fieldName": "resource",
              "fieldNamePath": "retentionPeriods.resource",
              "allowedValueMappings": {
                "default": "default",
                "customers": "customers",
                "plans": "plans",
                "providerConfigs": "providerConfigs",
                "subscriptionEvents": "subscriptionEvents",
                "subscriptions": "subscriptions",
                "tenantConfigs": "tenantConfigs",
                "transactionEvents": "transactionEvents",
                "transactions": "transactions",
                "usedEmailAddresses": "usedEmailAddresses",
                "usedPaymentMethods": "usedPaymentMethods"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "period": {
              "description": "the period of retention after which a resource should be deleted",
              "type": "duration",
              "example": "P1M1D",
              "fieldName": "period",
              "fieldNamePath": "retentionPeriods.period",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            }
          },
          "fieldName": "retentionPeriods",
          "fieldNamePath": "retentionPeriods",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "prohibited",
          "userTypes": [
            "enduser"
          ],
          "message": "endusers are not permitted to read or write tenancy configurations",
          "description": "endusers are not permitted to read or write tenancy configurations"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "service"
          ],
          "message": "service user type are not permitted to write to tenancy configurations",
          "description": "service user type are not permitted to write to tenancy configurations"
        },
        {
          "description": "name must match owner",
          "message": "name must match owner",
          "type": "nameMatchesOwner"
        }
      ],
      "relationships": {},
      "description": "Represents the tenancy configuration for the service",
      "singularName": "tenancyConfiguration",
      "pluralName": "tenancyConfigurations",
      "serviceName": "payment",
      "hyphenatedPluralName": "tenancy-configurations",
      "displaySingularName": "tenancy configuration",
      "displayPluralName": "tenancy configurations",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    }
  },
  "routes": [
    {
      "name": "root",
      "title": "root",
      "actions": [],
      "path": "/robots.txt",
      "method": "GET",
      "description": "robots.txt for search engines and crawlers",
      "stability": "stable",
      "inputs": {},
      "responses": []
    },
    {
      "name": "root",
      "title": "root",
      "actions": [],
      "path": "/",
      "method": "GET",
      "description": "Redirect '/' to '/docs'",
      "stability": "stable",
      "inputs": {},
      "responses": []
    },
    {
      "name": "payment-methods",
      "title": "Payment Service Get Methods",
      "group": "payment",
      "actions": [
        "payment:methods:get"
      ],
      "path": "/payment/methods",
      "method": "GET",
      "description": "Endpoint to get available payment methods",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-get-token",
      "title": "Payment Service Get Token",
      "group": "payment",
      "actions": [
        "payment:token:get"
      ],
      "path": "/payment/token",
      "method": "GET",
      "description": "Endpoint to get a provider token to initialise client library.",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "query": [
          {
            "type": "string",
            "description": "The userRef of the user on behalf of whom the purchase is being made. If supplied, a corresponding customer record MUST exist. If not supplied the userRef from the credentials will be used to look up the customer, if not found, an anonymous token will be returned. This is not suitable for subscriptions but will work for TVOD",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          },
          {
            "type": "string",
            "description": "Used to directly lookup the customer. If provided, it will be used instead of the userRefto find the customer record. If not provided, then the userRef will be used to browse for thecustomer record. If you have a customerRef, you should pass it. If not provided, its assumedthe customer record exists and can be returned via browse",
            "examples": [
              "test:customer1"
            ],
            "invalids": [
              ""
            ],
            "name": "customerRef",
            "required": false
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "The currency in which subsequent transactions will take place",
            "examples": [
              "GBP"
            ],
            "invalids": [
              ""
            ],
            "name": "currency",
            "required": true
          },
          {
            "type": "string",
            "description": "If not supplied, providerConfig with name of 'default' will be used",
            "examples": [
              "test:braintree-Merchant1"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "braintree-webhook-Challenge",
      "title": "Payment Service Braintree Webhook Challenge",
      "group": "payment",
      "actions": [],
      "path": "/payment/webhook/braintree/{providerConfigRef}",
      "method": "GET",
      "description": "Used by Braintree to Authenticate a webhook endpoint.",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "params": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": true
          }
        ],
        "query": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "invalids": [
              ""
            ],
            "name": "bt_challenge",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-add-payment-method",
      "title": "Payment Service Add Payment Method",
      "group": "payment",
      "actions": [
        "payment:add-payment-method:single"
      ],
      "path": "/payment/addPaymentMethod",
      "method": "POST",
      "description": "Provides ability to add a payment method to an existing customer record",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "string",
            "description": "The userRef of the user to whom the new payment method will apply.",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          },
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Make this the default payment method",
            "examples": [
              true
            ],
            "name": "makeDefault",
            "required": false
          },
          {
            "type": "object",
            "flags": {
              "presence": "required"
            },
            "description": "Wrapper object for the provider specific payment method creation data. See provider documentation for details around what goes here.",
            "name": "providerData",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-create-customer",
      "title": "Payment Service Create Customer",
      "group": "payment",
      "actions": [
        "payment:create-customer:single"
      ],
      "path": "/payment/createCustomer",
      "method": "POST",
      "description": "Allows for the creation of a customer record on the provider",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "string",
            "description": "The userRef of the user on behalf of whom the purchase is being made. If not supplied, userRef from accessToken will be used",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          },
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          },
          {
            "type": "object",
            "flags": {
              "presence": "required"
            },
            "description": "Wrapper object for the provider specific customer creation data. See provider documentation for details around what goes here.",
            "name": "providerData",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-purchase-item",
      "title": "Payment Service Purchase Item",
      "group": "payment",
      "actions": [
        "payment:purchase:single"
      ],
      "path": "/payment/purchaseItem",
      "method": "POST",
      "description": "Endpoint to make a single purchase",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Description of the item being purchased",
            "examples": [
              "Test Movie 1"
            ],
            "invalids": [
              ""
            ],
            "name": "description",
            "required": true
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "invalids": [
              ""
            ],
            "name": "contentRef",
            "required": true
          },
          {
            "type": "string",
            "description": "The userRef of the user on behalf of whom the purchase is being made. If not supplied, userRef from accessToken will be used",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "invalids": [
              ""
            ],
            "name": "offerRef",
            "required": true
          },
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          },
          {
            "type": "object",
            "flags": {
              "presence": "required"
            },
            "description": "object containing data specific to the selected provider that is necessary to process the request",
            "name": "providerData",
            "required": true
          },
          {
            "type": "boolean",
            "flags": {
              "default": false
            },
            "description": "Set to true if user wishes to store payment instrument for future use",
            "name": "storePaymentDetails",
            "required": false
          },
          {
            "type": "money",
            "flags": {
              "presence": "required"
            },
            "description": "Object representing the transaction amount and currency",
            "meta": [
              {
                "sequoiaType": "money"
              }
            ],
            "patterns": [
              {
                "rule": {
                  "type": "number",
                  "flags": {
                    "presence": "required"
                  },
                  "invalids": [
                    null,
                    null
                  ]
                }
              }
            ],
            "name": "amount",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-purchase-subscription",
      "title": "Payment Service Purchase Subscription",
      "group": "payment",
      "actions": [
        "payment:purchase-subscription:single"
      ],
      "path": "/payment/purchaseSubscription",
      "method": "POST",
      "description": "Endpoint to purchase a subscription",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "money",
            "flags": {
              "presence": "required"
            },
            "description": "Object representing the transaction amount and currency",
            "meta": [
              {
                "sequoiaType": "money"
              }
            ],
            "examples": [
              {
                "GBP": 9.99
              }
            ],
            "patterns": [
              {
                "rule": {
                  "type": "number",
                  "flags": {
                    "presence": "required"
                  },
                  "invalids": [
                    null,
                    null
                  ]
                }
              }
            ],
            "name": "amount",
            "required": true
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "The provider's subscription plan identifier",
            "invalids": [
              ""
            ],
            "name": "planId",
            "required": true
          },
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          },
          {
            "type": "object",
            "description": "object containing data specific to the selected provider",
            "name": "providerData",
            "required": false
          },
          {
            "type": "string",
            "description": "The payment method token to use for this purchase.",
            "examples": [
              "token1"
            ],
            "invalids": [
              ""
            ],
            "name": "token",
            "required": false
          },
          {
            "type": "boolean",
            "flags": {
              "default": false
            },
            "description": "If the subscription plan would normally have a trial period, but the user is not entitled to it, set this flag to true to allow the subscription to be created with no trial period. If not set and user is not entitled to the trial period, an exception will be raised. This behaviour can be toggled off in tenantConfig",
            "examples": [
              "true"
            ],
            "name": "skipTrialPeriod",
            "required": false
          },
          {
            "type": "string",
            "description": "The userRef of the user on behalf of whom the purchase is being made. If not supplied, userRef from accessToken will be used",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "cancel-subscription",
      "title": "Payment Service Cancel Subscription",
      "group": "subscription",
      "actions": [
        "payment:subscriptions:write"
      ],
      "path": "/subscription-cancellations/{owner}/{name}",
      "method": "POST",
      "description": "Provides ability to cancel a subscription",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          }
        ],
        "params": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "tenant name",
            "examples": [
              "test"
            ],
            "invalids": [
              ""
            ],
            "name": "owner",
            "required": true
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "name of subscription resource to cancel. This will also be used to identify the corresponding provider specific subscription to update",
            "examples": [
              "braintree-sub1"
            ],
            "invalids": [
              ""
            ],
            "name": "name",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-change-subscription-payment-method",
      "title": "Payment Service Change Subscription Payment Method",
      "group": "subscription",
      "actions": [
        "payment:subscriptions:write"
      ],
      "path": "/subscriptions/{owner}/{name}",
      "method": "POST",
      "description": "Provides ability to change the payment method used for a subscription",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "boolean",
            "description": "if supplied, all existing Payment options will be replaced with the newly created one. This is a temporary workaround and will be deprecated",
            "examples": [
              "true"
            ],
            "name": "deleteExistingPaymentOptionsOnSuccess",
            "required": false
          },
          {
            "type": "object",
            "flags": {
              "presence": "required"
            },
            "description": "Wrapper object for the provider specific payment method creation data. See provider documentation for details around what goes here.",
            "name": "providerData",
            "required": true
          },
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          }
        ],
        "params": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "tenant name",
            "examples": [
              "test"
            ],
            "invalids": [
              ""
            ],
            "name": "owner",
            "required": true
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "name of subscription resource to modify. This will also be used to identify the corresponding provider specific subscription to update",
            "examples": [
              "braintree-sub1"
            ],
            "invalids": [
              ""
            ],
            "name": "name",
            "required": true
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    },
    {
      "name": "braintree-webhook",
      "title": "Payment Service Braintree Webhook",
      "group": "payment",
      "actions": [],
      "path": "/payment/webhook/braintree/{providerConfigRef}",
      "method": "POST",
      "description": "Braintree webhook endpoint used for capturing notifications from Braintree",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": false,
      "stability": "experimental",
      "inputs": {
        "params": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": true
          }
        ]
      },
      "responses": []
    },
    {
      "name": "provider-delete-payment-method",
      "title": "Payment Service delete Payment Method",
      "group": "payment",
      "actions": [
        "payment:delete-payment-method:single"
      ],
      "path": "/payment/deletePaymentMethod",
      "method": "DELETE",
      "description": "Provides ability to delete a customer's payment method",
      "notes": [],
      "tags": [
        "payment",
        "api"
      ],
      "auth": {
        "strategies": [
          "sequoia"
        ],
        "mode": "required"
      },
      "stability": "experimental",
      "inputs": {
        "payload": [
          {
            "type": "string",
            "description": "providerConfig to use. If not specified, the system will attempt to load a providerConfig with the name 'default'",
            "examples": [
              "test:default"
            ],
            "invalids": [
              ""
            ],
            "name": "providerConfigRef",
            "required": false
          },
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "The token identifier of the payment method to be deleted.",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "token",
            "required": true
          },
          {
            "type": "string",
            "description": "The userRef of the user from whom the payment method will be removed.",
            "examples": [
              "test:user1"
            ],
            "invalids": [
              ""
            ],
            "name": "userRef",
            "required": false
          }
        ],
        "headers": [
          {
            "type": "string",
            "flags": {
              "presence": "required"
            },
            "description": "Bearer token",
            "examples": [
              "Bearer d56ca6b32aa2362da6014fb17b63c38710103f71"
            ],
            "name": "authorization"
          }
        ]
      },
      "responses": []
    }
  ]
}
